{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sains\\\\OneDrive\\\\Documents\\\\GitHub\\\\re34\\\\34\\\\my-app\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { login } from '../services/userService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const navigate = useNavigate();\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('Invalid email address').required('Email is required'),\n      password: Yup.string().required('Password is required')\n    }),\n    onSubmit: async (values, _ref) => {\n      let {\n        setSubmitting,\n        setFieldError\n      } = _ref;\n      try {\n        const response = await login(values.email, values.password);\n        const token = response.data.token;\n        // Store the token in local storage or state for authentication\n        // Redirect to the desired page\n        navigate('/'); // Example: Redirect to the home page\n      } catch (error) {\n        setFieldError('email', 'Invalid email or password');\n        setFieldError('password', 'Invalid email or password');\n      }\n      setSubmitting(false);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          value: formik.values.email,\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 58\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formik.values.password,\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), formik.touched.password && formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: formik.errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: formik.isSubmitting,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"bpSrOvH8nJQ9VaMidkvMycx/GW8=\", false, function () {\n  return [useNavigate, useFormik];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useNavigate","useFormik","Yup","login","jsxDEV","_jsxDEV","LoginPage","_s","navigate","formik","initialValues","email","password","validationSchema","object","string","required","onSubmit","values","_ref","setSubmitting","setFieldError","response","token","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","type","name","value","onChange","handleChange","onBlur","handleBlur","touched","errors","disabled","isSubmitting","_c","$RefreshReg$"],"sources":["C:/Users/sains/OneDrive/Documents/GitHub/re34/34/my-app/src/pages/LoginPage.js"],"sourcesContent":["import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { login } from '../services/userService';\r\n\r\nfunction LoginPage() {\r\n  const navigate = useNavigate();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string().email('Invalid email address').required('Email is required'),\r\n      password: Yup.string().required('Password is required'),\r\n    }),\r\n    onSubmit: async (values, { setSubmitting, setFieldError }) => {\r\n      try {\r\n        const response = await login(values.email, values.password);\r\n        const token = response.data.token;\r\n        // Store the token in local storage or state for authentication\r\n        // Redirect to the desired page\r\n        navigate('/'); // Example: Redirect to the home page\r\n      } catch (error) {\r\n        setFieldError('email', 'Invalid email or password');\r\n        setFieldError('password', 'Invalid email or password');\r\n      }\r\n      setSubmitting(false);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div>\r\n          <label>Email:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n          />\r\n          {formik.touched.email && formik.errors.email ? <div>{formik.errors.email}</div> : null}\r\n        </div>\r\n        <div>\r\n          <label>Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n          />\r\n          {formik.touched.password && formik.errors.password ? (\r\n            <div>{formik.errors.password}</div>\r\n          ) : null}\r\n        </div>\r\n        <button type=\"submit\" disabled={formik.isSubmitting}>\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}